# Generated by Django 5.1.4 on 2024-12-20 12:24

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('authors', '0001_initial'),
        ('categories', '0001_initial'),
        ('journals', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=500, verbose_name='Title')),
                ('keywords', models.TextField(help_text='Enter keywords separated by commas', verbose_name='Keywords')),
                ('annotation', models.TextField(verbose_name='Annotation')),
                ('original_file', models.FileField(upload_to='article_submissions/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['doc', 'docx', 'odt'])], verbose_name='Original Article File')),
                ('revised_file', models.FileField(blank=True, help_text='Accepted file types: .doc, .docx, .odt, .pdf, .ppt, .pptx, .xls, .xlsx, .txt, .rtf', null=True, upload_to='article_revisions/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['doc', 'docx', 'odt', 'pdf', 'ppt', 'pptx', 'xls', 'xlsx', 'txt', 'rtf'])], verbose_name='Revised Article File')),
                ('start_page', models.PositiveIntegerField(blank=True, help_text='Starting page in the journal', null=True, validators=[django.core.validators.MinValueValidator(1)], verbose_name='Start Page')),
                ('end_page', models.PositiveIntegerField(blank=True, help_text='Ending page in the journal', null=True, validators=[django.core.validators.MinValueValidator(1)], verbose_name='End Page')),
                ('views_count', models.PositiveIntegerField(default=0, help_text='Number of times the article has been viewed', verbose_name='Views Count')),
                ('downloads_count', models.PositiveIntegerField(default=0, help_text='Number of times the article has been downloaded', verbose_name='Downloads Count')),
                ('status', models.CharField(choices=[('SUBMITTED', 'Submitted'), ('UNDER_REVIEW', 'Under Review'), ('ACCEPTED', 'Accepted'), ('REJECTED', 'Rejected'), ('PUBLISHED', 'Published')], default='SUBMITTED', max_length=20, verbose_name='Status')),
                ('submission_date', models.DateTimeField(auto_now_add=True, verbose_name='Submission Date')),
                ('review_date', models.DateTimeField(blank=True, help_text='Date when the article was sent for review', null=True, verbose_name='Review Date')),
                ('acceptance_date', models.DateTimeField(blank=True, help_text='Date when the article was accepted', null=True, verbose_name='Acceptance Date')),
                ('publication_date', models.DateTimeField(blank=True, help_text='Date when the article was published', null=True, verbose_name='Publication Date')),
                ('last_updated', models.DateTimeField(auto_now=True, verbose_name='Last Updated')),
                ('authors', models.ManyToManyField(related_name='articles', to='authors.author', verbose_name='Authors')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='categories.category', verbose_name='Category')),
                ('journal_issue', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='articles', to='journals.journalissue', verbose_name='Journal Issue')),
            ],
            options={
                'verbose_name': 'Article',
                'verbose_name_plural': 'Articles',
                'ordering': ['-submission_date'],
                'indexes': [models.Index(fields=['-submission_date'], name='articles_ar_submiss_97a0a6_idx'), models.Index(fields=['status'], name='articles_ar_status_edb746_idx'), models.Index(fields=['publication_date'], name='articles_ar_publica_044c0c_idx')],
            },
        ),
    ]
